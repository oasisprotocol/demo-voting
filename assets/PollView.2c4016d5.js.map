{"version":3,"file":"PollView.2c4016d5.js","sources":["../../src/views/PollView.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { BigNumber, ethers } from 'ethers';\nimport {computed, reactive, ref} from 'vue';\nimport { ContentLoader } from 'vue-content-loader';\n\nimport type { Poll } from '../../../functions/api/types';\nimport type { DAOv1 } from '../contracts';\nimport {staticDAOv1, useDAOv1, usePollACLv1} from '../contracts';\nimport { Network, useEthereumStore } from '../stores/ethereum';\n\nconst props = defineProps<{ id: string }>();\nconst proposalId = `0x${props.id}`;\n\nconst dao = useDAOv1();\nconst eth = useEthereumStore();\n\nconst error = ref('');\nconst isTransacting = ref(false);\nconst poll = ref<{ proposal: DAOv1.ProposalWithIdStructOutput; ipfsParams: Poll } | undefined>(\n  undefined,\n);\nconst winningChoice = ref<number | undefined>(undefined);\nconst selectedChoice = ref<number | undefined>();\nconst existingVote = ref<number | undefined>(undefined);\nlet canClosePoll = ref<Boolean>(false);\nlet canAclVote = ref<Boolean>(false);\n\n(async () => {\n  const [active, params, topChoice] = await dao.value.callStatic.proposals(proposalId);\n  const proposal = { id: proposalId, active, topChoice, params };\n  const ipfsParamsRes = await fetch(`https://w3s.link/ipfs/${params.ipfsHash}`);\n  const ipfsParams = await ipfsParamsRes.json();\n  // TODO: redirect to 404\n  poll.value = { proposal, ipfsParams } as any;\n  if (!proposal.active) {\n    selectedChoice.value = winningChoice.value = proposal.topChoice;\n  }\n\n    const acl = await usePollACLv1();\n    const userAddress = eth.signer?await eth.signer.getAddress():ethers.constants.AddressZero;\n    canClosePoll.value = await acl.value.callStatic.canManagePoll(dao.value.address, proposalId, userAddress);\n    canAclVote.value = await acl.value.callStatic.canVoteOnPoll(dao.value.address, proposalId, userAddress);\n  })();\n\nconst canVote = computed(() => {\n  if (!eth.address) return false;\n  if (winningChoice.value !== undefined) return false;\n  if (selectedChoice.value === undefined) return false;\n  if (existingVote.value !== undefined) return false;\n  if (canAclVote.value == false) return false;\n  return true;\n});\n\nconst canSelect = computed(() => {\n  if (winningChoice.value !== undefined) return false;\n  if (eth.address === undefined) return true;\n  if (existingVote.value !== undefined) return false;\n  return true;\n});\n\nasync function closeBallot(): Promise<void> {\n  await eth.connect();\n  await eth.switchNetwork(Network.FromConfig);\n  const tx = await dao.value.closeProposal(proposalId);\n  const receipt = await tx.wait();\n\n  if (receipt.status != 1) throw new Error('close ballot tx failed');\n}\n\nasync function vote(e: Event): Promise<void> {\n  e.preventDefault();\n  try {\n    error.value = '';\n    isTransacting.value = true;\n    await doVote();\n  } catch (e: any) {\n    error.value = e.reason ?? e.message;\n  } finally {\n    isTransacting.value = false;\n  }\n}\n\nasync function doVote(): Promise<void> {\n  await eth.connect();\n\n  if (selectedChoice.value === undefined) throw new Error('no choice selected');\n\n  const choice = selectedChoice.value;\n\n  console.log('casting vote');\n  await eth.switchNetwork(Network.FromConfig);\n  const tx = await dao.value.castVote(proposalId, choice);\n  const receipt = await tx.wait();\n\n  if (receipt.status != 1) throw new Error('cast vote tx failed');\n  existingVote.value = choice;\n\n  // Check if the ballot has closed by examining the events (logs).\n  let topChoice = undefined;\n  for (const event of receipt.events ?? []) {\n    if (\n      event.address == import.meta.env.VITE_BALLOT_BOX_V1_ADDR &&\n      event.event === 'BallotClosed'\n    ) {\n      topChoice = BigNumber.from(event.data).toNumber();\n    }\n  }\n  if (topChoice === undefined) return;\n  winningChoice.value = topChoice;\n  let hasClosed = false;\n  while (!hasClosed) {\n    console.log('checking if ballot has been closed on BSC');\n    hasClosed = !(await staticDAOv1.callStatic.proposals(proposalId)).active;\n    await new Promise((resolve) => setTimeout(resolve, 1000));\n  }\n}\n\neth.connect();\n</script>\n\n<template>\n  <main style=\"max-width: 60ch\" class=\"p-5 m-auto\">\n    <h1 class=\"font-medium text-3xl mb-4\">\n      <ContentLoader v-if=\"!poll?.ipfsParams.name\" width=\"30\" height=\"3\">\n        <rect x=\"0\" y=\"0.1em\" rx=\"3\" ry=\"3\" width=\"30ch\" height=\"1.3em\" />\n      </ContentLoader>\n      <span v-else>{{ poll.ipfsParams.name }}</span>\n    </h1>\n    <p v-if=\"poll\" class=\"text-gray-500 mb-10\" style=\"height: 3em\">\n      {{ poll.ipfsParams.description }}\n    </p>\n    <ContentLoader v-else width=\"60\" height=\"6\">\n      <rect x=\"0\" y=\"0.1em\" rx=\"3\" ry=\"3\" width=\"50ch\" height=\"1.1em\" />\n      <rect x=\"0\" y=\"1.4em\" rx=\"3\" ry=\"3\" width=\"45ch\" height=\"1.1em\" />\n      <rect x=\"0\" y=\"2.7em\" rx=\"3\" ry=\"3\" width=\"47ch\" height=\"1.1em\" />\n      <rect x=\"0\" y=\"4.0em\" rx=\"3\" ry=\"3\" width=\"28ch\" height=\"1.1em\" />\n    </ContentLoader>\n    <h2 class=\"text-lg font-medium underline\">Choices</h2>\n    <p v-if=\"poll?.ipfsParams.options.publishVotes\" class=\"text-orange-600 my-2\">\n      Votes will be made public after voting has ended.\n    </p>\n    <form @submit=\"vote\">\n      <ul v-if=\"poll?.ipfsParams.choices\">\n        <li\n          class=\"choice-input\"\n          v-for=\"(choice, choiceId) in poll.ipfsParams.choices\"\n          :key=\"choiceId\"\n          :class=\"{\n            selected: selectedChoice === choiceId,\n            won: choiceId === winningChoice,\n            lost: winningChoice !== undefined && choiceId !== winningChoice,\n          }\"\n        >\n          <label class=\"inline-block py-6 px-3 pr-4 w-full\">\n            <input\n              tabindex=\"1\"\n              name=\"choice\"\n              :value=\"choiceId\"\n              type=\"radio\"\n              :disabled=\"!canSelect\"\n              v-model=\"selectedChoice\"\n            />\n            <span class=\"inline-block ml-2\">{{ choice }}</span>\n          </label>\n        </li>\n      </ul>\n      <ContentLoader v-else width=\"50\" height=\"6\">\n        <rect x=\"0\" y=\"0.1em\" rx=\"3\" ry=\"3\" width=\"26ch\" height=\"1.1em\" />\n        <rect x=\"0\" y=\"1.4em\" rx=\"3\" ry=\"3\" width=\"33ch\" height=\"1.1em\" />\n        <rect x=\"0\" y=\"2.7em\" rx=\"3\" ry=\"3\" width=\"37ch\" height=\"1.1em\" />\n        <rect x=\"0\" y=\"4.0em\" rx=\"3\" ry=\"3\" width=\"10ch\" height=\"1.1em\" />\n      </ContentLoader>\n      <p v-if=\"error\" class=\"error my-2\">\n        <span class=\"font-bold\">Error:</span>&nbsp;<span>{{ error.replace('Error: ', '') }}</span>\n      </p>\n      <button\n        tabindex=\"1\"\n        class=\"my-3 border-2 border-blue-800 text-gray-100 rounded-md p-2 bg-blue-600 disabled:border-gray-500 disabled:text-gray-500 disabled:cursor-default disabled:bg-white transition-colors font-bold text-xl disabled:hidden\"\n        :disabled=\"!canVote || isTransacting\"\n        @click=\"vote\"\n      >\n        <span v-if=\"isTransacting\">Pushingâ€¦</span>\n        <span v-else-if=\"!isTransacting\">Vote</span>\n      </button>\n    </form>\n    <button\n      v-if=\"canClosePoll\"\n      tabindex=\"1\"\n      class=\"my-3 border-2 border-blue-800 text-gray-100 rounded-md p-2 bg-red-600 disabled:border-gray-500 disabled:text-gray-500 disabled:cursor-default disabled:bg-white transition-colors font-bold text-xl disabled:hidden\"\n      :disabled=\"false\"\n      @click=\"closeBallot\"\n    >\n      <span>Close Ballot</span>\n    </button>\n  </main>\n</template>\n\n<style lang=\"postcss\" scoped>\n.choice-input {\n  @apply my-4 border-2 border-black rounded-sm;\n}\n.choice-input:not(.lost).selected {\n  @apply bg-gradient-to-b from-secondary to-secondary via-transparent;\n}\n.choice-input.won {\n  @apply bg-secondary;\n}\n.choice-input * {\n  cursor: pointer;\n}\n</style>\n"],"names":["proposalId","dao","useDAOv1","eth","useEthereumStore","error","ref","isTransacting","poll","winningChoice","selectedChoice","existingVote","canClosePoll","canAclVote","active","params","topChoice","proposal","ipfsParams","acl","usePollACLv1","userAddress","ethers.constants.AddressZero","canVote","computed","canSelect","closeBallot","Network","vote","e","doVote","choice","receipt","event","_a","BigNumber","hasClosed","staticDAOv1","resolve"],"mappings":"koDAWM,MAAAA,EAAa,OAAW,KAExBC,EAAMC,IACNC,EAAMC,IAENC,EAAQC,EAAI,EAAE,EACdC,EAAgBD,EAAI,EAAK,EACzBE,EAAOF,EACX,MAAA,EAEIG,EAAgBH,EAAwB,MAAS,EACjDI,EAAiBJ,IACjBK,EAAeL,EAAwB,MAAS,EAClD,IAAAM,EAAeN,EAAa,EAAK,EACjCO,EAAaP,EAAa,EAAK,GAElC,SAAY,CACL,KAAA,CAACQ,EAAQC,EAAQC,CAAS,EAAI,MAAMf,EAAI,MAAM,WAAW,UAAUD,CAAU,EAC7EiB,EAAW,CAAE,GAAIjB,EAAY,OAAAc,EAAQ,UAAAE,EAAW,OAAAD,GAEhDG,EAAa,MADG,MAAM,MAAM,yBAAyBH,EAAO,UAAU,GACrC,OAElCP,EAAA,MAAQ,CAAE,SAAAS,EAAU,WAAAC,CAAW,EAC/BD,EAAS,SACGP,EAAA,MAAQD,EAAc,MAAQQ,EAAS,WAGhD,MAAAE,EAAM,MAAMC,IACZC,EAAclB,EAAI,OAAO,MAAMA,EAAI,OAAO,WAAa,EAAAmB,EAChDV,EAAA,MAAQ,MAAMO,EAAI,MAAM,WAAW,cAAclB,EAAI,MAAM,QAASD,EAAYqB,CAAW,EAC7FR,EAAA,MAAQ,MAAMM,EAAI,MAAM,WAAW,cAAclB,EAAI,MAAM,QAASD,EAAYqB,CAAW,CAAA,KAGpG,MAAAE,EAAUC,EAAS,IACnB,GAACrB,EAAI,SACLM,EAAc,QAAU,QACxBC,EAAe,QAAU,QACzBC,EAAa,QAAU,QACvBE,EAAW,OAAS,GAEzB,EAEKY,EAAYD,EAAS,IACrBf,EAAc,QAAU,OAAkB,GAC1CN,EAAI,UAAY,OAAkB,GAClCQ,EAAa,QAAU,MAE5B,EAED,eAAee,GAA6B,CAM1C,GALA,MAAMvB,EAAI,UACJ,MAAAA,EAAI,cAAcwB,EAAQ,UAAU,GAE1B,MADL,MAAM1B,EAAI,MAAM,cAAcD,CAAU,GAC1B,QAEb,QAAU,EAAS,MAAA,IAAI,MAAM,wBAAwB,CACnE,CAEA,eAAe4B,EAAKC,EAAyB,OAC3CA,EAAE,eAAe,EACb,GAAA,CACFxB,EAAM,MAAQ,GACdE,EAAc,MAAQ,GACtB,MAAMuB,EAAO,QACND,GACDxB,EAAA,OAAQwB,EAAAA,EAAE,SAAFA,KAAAA,EAAYA,EAAE,OAAA,QAC5B,CACAtB,EAAc,MAAQ,EACxB,CACF,CAEA,eAAeuB,GAAwB,OAGrC,GAFA,MAAM3B,EAAI,UAENO,EAAe,QAAU,OAAiB,MAAA,IAAI,MAAM,oBAAoB,EAE5E,MAAMqB,EAASrB,EAAe,MAE9B,QAAQ,IAAI,cAAc,EACpB,MAAAP,EAAI,cAAcwB,EAAQ,UAAU,EAEpC,MAAAK,EAAU,MADL,MAAM/B,EAAI,MAAM,SAASD,EAAY+B,CAAM,GAC7B,OAEzB,GAAIC,EAAQ,QAAU,EAAS,MAAA,IAAI,MAAM,qBAAqB,EAC9DrB,EAAa,MAAQoB,EAGrB,IAAIf,EACJ,UAAWiB,KAASC,EAAAF,EAAQ,SAAR,KAAAE,EAAkB,CAAA,EAElCD,EAAM,SAAW,CAAA,EAAgB,yBACjCA,EAAM,QAAU,iBAEhBjB,EAAYmB,EAAU,KAAKF,EAAM,IAAI,EAAE,YAG3C,GAAIjB,IAAc,OAAW,OAC7BP,EAAc,MAAQO,EACtB,IAAIoB,EAAY,GAChB,KAAO,CAACA,GACN,QAAQ,IAAI,2CAA2C,EACvDA,EAAY,EAAE,MAAMC,EAAY,WAAW,UAAUrC,CAAU,GAAG,OAClE,MAAM,IAAI,QAASsC,GAAY,WAAWA,EAAS,GAAI,CAAC,CAE5D,CAEA,OAAAnC,EAAI,QAAQ"}