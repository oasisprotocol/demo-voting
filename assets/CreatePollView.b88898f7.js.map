{"version":3,"file":"CreatePollView.b88898f7.js","sources":["../../src/views/CreatePollView.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { ethers } from 'ethers';\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\n\nimport { useDAOv1 } from '../contracts';\nimport { Network, useEthereumStore } from '../stores/ethereum';\nimport type { Poll } from '../../../functions/api/types';\n\nconst router = useRouter();\nconst eth = useEthereumStore();\nconst dao = useDAOv1();\n\nconst pinBody = async (jwt: string, poll: Poll) => {\n  const res = await fetch('https://api.pinata.cloud/pinning/pinJSONToIPFS', {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json',\n      authorization: `Bearer ${jwt}`,\n    },\n    body: JSON.stringify({\n      pinataContent: poll,\n    }),\n  });\n  const resBody: any = await res.json();\n  if (res.status !== 200) throw new Error('failed to pin');\n  const resp = { ipfsHash: resBody.IpfsHash };\n  return new Response(JSON.stringify(resp), {\n    status: 201,\n    headers: { 'content-type': 'application/json' },\n  });\n};\n\nconst errors = ref<string[]>([]);\nconst pollName = ref('');\nconst pollDesc = ref('');\nconst choices = ref<Array<{ key: number; value: string }>>([]);\nconst publishVotes = ref(false);\nconst creating = ref(false);\n\nlet choiceCount = 0; // a monotonic counter for use as :key\nconst removeChoice = (i: number) => choices.value.splice(i, 1);\nconst addChoice = () => {\n  choices.value.push({ key: choiceCount, value: '' });\n  choiceCount++;\n};\naddChoice();\naddChoice();\naddChoice();\n\nasync function createPoll(e: Event): Promise<void> {\n  if (e.target instanceof HTMLFormElement) {\n    e.target.checkValidity();\n    if (!e.target.reportValidity()) return;\n  }\n  e.preventDefault();\n  try {\n    errors.value.splice(0, errors.value.length);\n    creating.value = true;\n    const proposalId = await doCreatePoll();\n    if (!proposalId) return;\n    router.push({ name: 'poll', params: { id: proposalId } });\n  } catch (e: any) {\n    errors.value.push(`Failed to create poll: ${e.message ?? JSON.stringify(e)}`);\n    console.error(e);\n  } finally {\n    creating.value = false;\n  }\n}\n\nasync function doCreatePoll(): Promise<string> {\n  await eth.connect();\n  await eth.switchNetwork(Network.FromConfig);\n  if (errors.value.length > 0) return '';\n  const poll: Poll = {\n    creator: eth.address!,\n    name: pollName.value,\n    description: pollDesc.value,\n    choices: choices.value.map((c) => c.value),\n    options: {\n      publishVotes: publishVotes.value,\n    },\n  };\n\n  const res = await pinBody(import.meta.env.VITE_PINATA_JWT!, poll);\n  const resJson = await res.json();\n  if (res.status !== 201) throw new Error(resJson.error);\n  const ipfsHash = resJson.ipfsHash;\n  const proposalParams = {\n    ipfsHash,\n    numChoices: choices.value.length,\n    publishVotes: poll.options.publishVotes,\n  };\n  // TODO: check if proposal already exists on the host chain and continue if so (idempotence)\n  const proposalId = await dao.value.callStatic.createProposal(proposalParams);\n  console.log('creating proposal');\n  const createProposalTx = await dao.value.createProposal(proposalParams);\n  console.log('creating proposal in', createProposalTx.hash);\n  if ((await createProposalTx.wait()).status !== 1)\n    throw new Error('createProposal tx receipt reported failure.');\n  let isActive = false;\n  while (!isActive) {\n    console.log('checking if ballot has been created on Sapphire');\n    isActive = await dao.value.callStatic.ballotIsActive(proposalId);\n    await new Promise((resolve) => setTimeout(resolve, 1000));\n  }\n  return proposalId.replace('0x', '');\n}\n</script>\n\n<template>\n  <main style=\"max-width: 60ch\" class=\"py-5 m-auto w-4/5\">\n    <h2>New Poll</h2>\n    <form @submit=\"createPoll\">\n      <fieldset>\n        <legend>Name</legend>\n        <input class=\"w-3/4\" type=\"text\" v-model=\"pollName\" required />\n      </fieldset>\n      <fieldset>\n        <legend>Description</legend>\n        <textarea class=\"p-2 bg-transparent w-full h-full\" v-model=\"pollDesc\" required />\n      </fieldset>\n      <fieldset>\n        <legend>Choices</legend>\n        <ol class=\"ml-8 list-decimal\">\n          <li class=\"choice-item\" v-for=\"(choice, i) in choices\" :key=\"choice.key\">\n            <input type=\"text\" required v-model=\"choices[i].value\" />\n            <button\n              v-if=\"choices.length > 1\"\n              class=\"inline-block text-lg text-gray-500 pl-1\"\n              :data-ix=\"i\"\n              @click.prevent=\"removeChoice(i)\"\n            >\n              Ⓧ\n            </button>\n          </li>\n        </ol>\n        <button class=\"underline ml-3 my-2 text-gray-700\" @click.prevent=\"addChoice\">\n          ＋Add choice\n        </button>\n      </fieldset>\n      <fieldset>\n        <legend>Additional Options</legend>\n        <ul class=\"px-3\">\n          <li class=\"my-3\">\n            <input id=\"publish-votes\" type=\"checkbox\" v-model=\"publishVotes\" />\n            <label class=\"inline-block mx-3\" for=\"publish-votes\"\n              >Publish individual votes after voting has ended.</label\n            >\n          </li>\n        </ul>\n      </fieldset>\n      <div v-if=\"errors.length > 0\" class=\"text-red-500 px-3 mt-5 rounded-sm\">\n        <span class=\"font-bold\">Errors:</span>\n        <ul class=\"list-disc px-8\">\n          <li v-for=\"error in errors\" :key=\"error\">{{ error }}</li>\n        </ul>\n      </div>\n      <button\n        class=\"my-3 border-2 border-blue-700 text-blue-900 rounded-md p-2\"\n        :disabled=\"creating\"\n      >\n        <span v-if=\"creating\">Creating…</span>\n        <span v-else>Create Poll</span>\n      </button>\n    </form>\n  </main>\n</template>\n\n<style scoped lang=\"postcss\">\n.choice-item:first-of-type {\n  @apply mt-0;\n}\n\ninput[type='text'] {\n  @apply inline-block text-lg mx-3 bg-transparent;\n  border-bottom: 1px solid black;\n}\n\nfieldset {\n  @apply border-2 p-4 border-gray-800 rounded-sm bg-transparent my-6;\n}\n\nlegend {\n  @apply px-1 font-medium;\n}\n\nh2 {\n  @apply font-bold text-2xl my-2;\n}\n</style>\n"],"names":["router","useRouter","eth","useEthereumStore","dao","useDAOv1","pinBody","jwt","poll","res","resBody","resp","errors","ref","pollName","pollDesc","choices","publishVotes","creating","choiceCount","removeChoice","i","addChoice","createPoll","e","proposalId","doCreatePoll","Network","c","resJson","proposalParams","createProposalTx","isActive","resolve"],"mappings":"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"}